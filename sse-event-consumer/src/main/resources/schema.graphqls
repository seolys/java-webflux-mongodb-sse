schema {
    query: Query
    subscription: Subscription
}

type Query {
    health: String
}

type Subscription {
    userEvent(authToken: String!): UserEvent!
}

union UserEventDetail = UserEventChangeAuthDetail
    | UserEventDuplicateLoginDetail
    | UserEventLogoutDetail
#    | UserEventNullTestDetail

type UserEvent {
    eventId: String!
    eventType: EventType!
    createdAt: String!
    detail: UserEventDetail
}

enum EventType {
    DUPLICATE_LOGIN
    LOGOUT
    CHANGE_AUTH
    NULL_TEST
}

type UserEventChangeAuthDetail {
    changeAuthData: String
}

type UserEventDuplicateLoginDetail {
    duplicateLoginData: String
}

type UserEventLogoutDetail {
    logoutData: String
}

#type UserEventNullTestDetail {
#    #    dummy: String
#}
